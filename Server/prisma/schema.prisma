
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum DisabilityType {
  MOBILITY
  VISUAL
  HEARING
  OTHER
}

model User {
  id                String   @id @default(cuid())
  name              String?
  email             String   @unique
  password          String  
  role              UserRole @default(USER)
  profileInfo       String?
  disabilities      DisabilityType[] @default([]) 
  notificationToken String?
  reviews           Review[]
  notifications     Notification[]
  createdAt         DateTime @default(now())
}

model Venue {
  id                    String   @id @default(cuid())
  name                  String
  address               String
  contactInformation    String
  description           String?
  photos                String[]
  accessibilityFeatures AccessibilityFeature[]
  routeDirection        String? 
  reviews               Review[]
  createdAt             DateTime @default(now())
}

model AccessibilityFeature {
  id                String  @id @default(cuid())
  category         String 
  description      String?
  availabilityStatus Boolean @default(true)
  venue            Venue?   @relation(fields: [venueId], references: [id])
  venueId          String?
}

model Review {
  id                   String   @id @default(cuid())
  venueId              String
  userId               String
  rating               Int
  comments             String?
  accessibilityRatings Json 
  dateCreated          DateTime @default(now())
  dateUpdated          DateTime @updatedAt
  user                 User   @relation(fields: [userId], references: [id])
  venue                Venue  @relation(fields: [venueId], references: [id])
}

model Notification {
  id        String   @id @default(cuid())
  userId    String
  type      String 
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}
